{"version":3,"sources":["MovieForm.js","App.js","reportWebVitals.js","index.js"],"names":["MovieRecommender","title","setTitle","useState","recommendations","setRecommendations","error","setError","React","createElement","onSubmit","event","preventDefault","axios","post","then","response","data","recommended_movies","length","catch","status","console","type","value","onChange","e","target","placeholder","style","color","map","movie","index","key","App","className","MovieForm","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"wRAkEeA,MA/Df,WACI,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAAiBC,GAAsBF,mBAAS,KAChDG,EAAOC,GAAYJ,mBAAS,IA+BnC,OACIK,IAAAC,cAAA,WACID,IAAAC,cAAA,QAAMC,SA/BQC,IAClBA,EAAMC,iBAENL,EAAS,IACTF,EAAmB,IAGnBQ,IAAMC,KAAK,uCAAwC,CAAEb,UAChDc,KAAOC,IAC4C,IAA5CA,EAASC,KAAKC,mBAAmBC,OACjCZ,EAAS,4CAETF,EAAmBW,EAASC,KAAKC,sBAGxCE,MAAOd,IACAA,EAAMU,UAAsC,MAA1BV,EAAMU,SAASK,OACjCd,EAAS,kCAETe,QAAQhB,MAAM,kCAAmCA,GACjDC,EAAS,mDAYbC,IAAAC,cAAA,SACIc,KAAK,OACLC,MAAOvB,EACPwB,SAAWC,GAAMxB,EAASwB,EAAEC,OAAOH,OACnCI,YAAY,sBAEhBpB,IAAAC,cAAA,UAAQc,KAAK,UAAS,wBAIzBjB,GAASE,IAAAC,cAAA,KAAGoB,MAAO,CAAEC,MAAO,QAAUxB,GAEtCF,EAAgBe,OAAS,GACtBX,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAI,wBAAsBR,EAAM,KAChCO,IAAAC,cAAA,UACKL,EAAgB2B,IAAI,CAACC,EAAOC,IACzBzB,IAAAC,cAAA,MAAIyB,IAAKD,GAAQD,Q,MCzC9BG,MAZf,WACE,OACE3B,IAAAC,cAAA,OAAK2B,UAAU,OACb5B,IAAAC,cAAA,UAAQ2B,UAAU,cAChB5B,IAAAC,cAAA,UAAI,yCAEJD,IAAAC,cAAC4B,EAAS,SCEHC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,KAAK0B,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCDDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH3C,IAAAC,cAACD,IAAM4C,WAAU,KACf5C,IAAAC,cAAC0B,EAAG,QAORG,M","file":"static/js/main.8cd833eb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction MovieRecommender() {\n    const [title, setTitle] = useState('');\n    const [recommendations, setRecommendations] = useState([]);\n    const [error, setError] = useState('');\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        setError('');  // Clear any previous error messages\n        setRecommendations([]);  // Clear previous recommendations\n        \n        // Make a POST request to the Django API\n        axios.post('http://127.0.0.1:8000/api/recommend/', { title })\n            .then ((response) => {\n                if (response.data.recommended_movies.length === 0) {\n                    setError('No recommendations found for this movie.');\n                } else {\n                    setRecommendations(response.data.recommended_movies);  // Set the recommendations state\n                }\n            })\n            .catch((error) => {\n                if (error.response && error.response.status === 404) {\n                    setError('Movie not yet in our database');  // Custom error message\n                } else {\n                    console.error('Error fetching recommendations:', error);\n                    setError('An error occurred. Please try again later.');  // General error message\n                  }\n            });\n\n            \n    };\n\n    \n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    placeholder=\"Enter movie title\"\n                />\n                <button type=\"submit\">Get Recommendations</button>\n            </form>\n\n            {/* Display Error Message if Exists */}\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n\n            {recommendations.length > 0 && (\n                <div>\n                    <h2>Recommendations for \"{title}\"</h2>\n                    <ul>\n                        {recommendations.map((movie, index) => (\n                            <li key={index}>{movie}</li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default MovieRecommender;\n","import React from 'react';\nimport MovieForm from './MovieForm';\nimport './App.css'; \n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Welcome to the Movie Recommender App!</h1>\n        {/* Render the MovieForm component */}\n        <MovieForm />\n      </header>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}